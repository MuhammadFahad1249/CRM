 public class Account : IPlugin

 {

     ITracingService tracingService;

     IOrganizationService service;

     IPluginExecutionContext context;

     Entity entity;



     public void Execute(IServiceProvider serviceProvider)

     {

         tracingService = (ITracingService)serviceProvider.GetService(typeof(ITracingService));

         context = (IPluginExecutionContext)serviceProvider.GetService(typeof(IPluginExecutionContext));

         IOrganizationServiceFactory serviceFactory = (IOrganizationServiceFactory)serviceProvider.GetService(typeof(IOrganizationServiceFactory));

         service = serviceFactory.CreateOrganizationService(context.UserId);



         if (context.InputParameters.Contains("Target") && context.InputParameters["Target"] is Entity)

         {

             entity = (Entity)context.InputParameters["Target"];
             tracingService.Trace("safafasfsdfsdg");


             try

             {

                 if (entity.LogicalName == "hms_hotelmanagementsystem")

                 {

                     switch (context.Stage)

                     {

                         case 10://Pre validation 



                             switch (context.MessageName)

                             {

                                 case "Create":



                                     break;



                                 case "Update":

                                     break;



                                 default:

                                     break;

                             }

                             break;



                         case 20://Pre-operation 



                             switch (context.MessageName)

                             {

                                 case "Create":

                                     displayprimaryname();

                                     break;



                                 case "Update":

                                    /* if (entity.Attributes.Contains("hms_customername")) 
                                     {
                                         aasa();
                                     }
                                    */


                                     break;



                                 default:

                                     break;

                             }

                             break;



                         case 40://post-operation 



                             switch (context.MessageName)

                             {

                                 case "Create":

                                     break;



                                 case "Update":

                                     break;



                                 default:

                                     break;

                             }

                             break;

                     }

                 }

             }

             catch (Exception ex)

             {

                 throw new InvalidPluginExecutionException("An error occurred in Account Plugin.", ex);

             }

         }

     }

     private void displayprimaryname() 
     {
         try {


             entity["hms_customername"] = "true";
         }

         catch (Exception ex) 
         {
             throw new InvalidPluginExecutionException("The Error is ", ex);

         }
     }
